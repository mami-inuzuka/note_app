require 'sinatra'
require 'sinatra/reloader'
require 'csv'
require 'securerandom'

get '/' do
  @data_list = CSV.read("data.csv", headers: true)
  erb :index
end

get '/new' do
  erb :new
end

post '/create' do
  id = SecureRandom.uuid
  CSV.open('data.csv','a') do |csv|
    csv << [id,params[:title],params[:content]]
  end
  redirect to('/')
end

get '/show/:id' do
  csv_table = CSV.table("data.csv", headers: true).by_row
  @data = csv_table.find { |row| row[:id] == params[:id] }
  erb :show
end

get '/delete/:id' do
  csv_table = CSV.table("data.csv", headers: true).by_row
  csv_table.delete_if { |row| row[:id] == params[:id] }

  CSV.open("data.csv", "w", headers: true) do |csv|
    csv << ["id","title","content"]
    csv_table.each { |row| csv << row }
  end
  redirect to('/')
  erb :delete
end

get '/edit/:id' do
  csv_table = CSV.table("data.csv", headers: true).by_row
  @data = csv_table.find { |row| row[:id] == params[:id] }
  erb :edit
end

patch '/update/:id' do
  csv_table = CSV.table("data.csv", headers: true)
  csv_table.each do |row|
    if row[:id] == params[:id]
      row[:title] = params[:title]
      row[:content] = params[:content]
    end
  end
  CSV.open("data.csv", "w", headers: true) do |csv|
    csv << ["id","title","content"]
    csv_table.each { |row| csv << row }
  end
  redirect to('/')
end

not_found do
  erb :error_404
end
